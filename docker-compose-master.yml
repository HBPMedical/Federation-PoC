#                    Copyright (c) 2016-2016
#   Data Intensive Applications and Systems Labaratory (DIAS)
#            Ecole Polytechnique Federale de Lausanne
#
#                      All Rights Reserved.
#
# Permission to use, copy, modify and distribute this software and its
# documentation is hereby granted, provided that both the copyright notice
# and this permission notice appear in all copies of the software, derivative
# works or modified versions, and any portions thereof, and that both notices
# appear in supporting documentation.
#
# This code is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE. THE AUTHORS AND ECOLE POLYTECHNIQUE FEDERALE DE LAUSANNE
# DISCLAIM ANY LIABILITY OF ANY KIND FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE
# USE OF THIS SOFTWARE.

version: '3'
# the following environment variables are expected to be available when running
# docker-compose up
# - raw_data_root:      The folder containing the data files (CSV, json,...) on the
#                       swarm node host. Mapped to /datasets WITHIN the containers
# - pg_data_root:       The folder containing the PostgreSQL binary tables on the
#                       swarm node host. Mapped to /data WITHIN the containers
# - raw_admin_conf:     Nginx configuration file
# - raw_admin_htpasswd: .htpasswd configuration file
# - raw_admin_log:      Nginx directory for the logs

networks:
  net-federation:
    external:
      name: mip_net-federation

  net-local:
    driver: overlay
    internal: true

services:
  exareme-manager:
    image:  hbpmip/exareme
    environment:
      - CONSULURL=${consul_url}
      - MASTER_FLAG=master
      - EXA_WORKERS_WAIT=${exareme_workers_wait} # Wait for N workers
      - RAWUSERNAME=federation
      - RAWPASSWORD=federation
      - RAWHOST=raw-ui
      - RAWPORT=5555
      - RAWENDPOINT=query
      - RAWRESULTS=all
      - RAWDATAKEY=output #query used with output, query-start with data
      - MODE=global
    depends_on:
      - raw-engine
      - exareme-keystore
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints:
          - node.role == manager       # Ensures we only start on manager nodes
          - node.labels.name == ${federation_node}
    ports:
      - "9090:9090"      # So that we can access the Exareme REST API / interface
    networks:
      - "net-federation" # Connect the docker container to the global network
      - "net-local"      # Connect the docker container to the local network

  raw-engine:
    image: "hbpmip/postgresraw:v1.0"
    networks:
      - "net-local"      # Connect the docker container to the local network
    volumes:
      - "${raw_data_root}:/datasets:ro"
      - "${pg_data_root}:/data:rw"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints:
          - node.labels.name == ${federation_node}
    environment:
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  raw-ui:
    image: "hbpmip/postgresraw-ui:v1.0"
    networks:
      - "net-local"      # Connect the docker container to the local network
    depends_on:
      - raw-engine
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints:
          - node.labels.name == ${federation_node}
    volumes:
      - "${raw_data_root}:/datasets:ro"
      - "${pg_data_root}:/data:rw"
    environment:
      - POSTGRES_HOST=raw-engine
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
